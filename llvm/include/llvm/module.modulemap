module LLVM_Analysis {
  requires cplusplus
  umbrella "Analysis"
  module * { export * }

  // This is intended for (repeated) textual inclusion.
  textual header "Analysis/TargetLibraryInfo.def"
  textual header "Analysis/VecFuncs.def"
}

module LLVM_AsmParser {
  requires cplusplus
  umbrella "AsmParser"
  module * { export * }
}

// A module covering CodeGen/ and Target/. These are intertwined
// and codependent, and thus notionally form a single module.
module LLVM_Backend {
  requires cplusplus

  module CodeGen {
    umbrella "CodeGen"
    module * { export * }

    // Exclude these; they're intended to be included into only a single
    // translation unit (or none) and aren't part of this module.
    exclude header "CodeGen/LinkAllAsmWriterComponents.h"
    exclude header "CodeGen/LinkAllCodegenComponents.h"

    // These are intended for (repeated) textual inclusion.
    textual header "CodeGen/DIEValue.def"
    textual header "CodeGen/MachinePassRegistry.def"
  }
}

// FIXME: Make this as a submodule of LLVM_Backend again.
//        Doing so causes a linker error in clang-format.
module LLVM_Backend_Target {
  umbrella "Target"
  module * { export * }
}

module LLVM_Bitcode {
 requires cplusplus
 umbrella "Bitcode"
 module * { export * }
}

module LLVM_Bitstream {
 requires cplusplus
 umbrella "Bitstream"
 module * { export * }
}

module LLVM_BinaryFormat {
    requires cplusplus
    umbrella "BinaryFormat" module * { export * }
    textual header "BinaryFormat/Dwarf.def"
    textual header "BinaryFormat/DynamicTags.def"
    textual header "BinaryFormat/MachO.def"
    textual header "BinaryFormat/MinidumpConstants.def"
    textual header "BinaryFormat/Swift.def"
    textual header "BinaryFormat/ELFRelocs/AArch64.def"
    textual header "BinaryFormat/ELFRelocs/AMDGPU.def"
    textual header "BinaryFormat/ELFRelocs/ARM.def"
    textual header "BinaryFormat/ELFRelocs/ARC.def"
    textual header "BinaryFormat/ELFRelocs/AVR.def"
    textual header "BinaryFormat/ELFRelocs/BPF.def"
    textual header "BinaryFormat/ELFRelocs/CSKY.def"
    textual header "BinaryFormat/ELFRelocs/Hexagon.def"
    textual header "BinaryFormat/ELFRelocs/i386.def"
    textual header "BinaryFormat/ELFRelocs/Lanai.def"
    textual header "BinaryFormat/ELFRelocs/M68k.def"
    textual header "BinaryFormat/ELFRelocs/Mips.def"
    textual header "BinaryFormat/ELFRelocs/MSP430.def"
    textual header "BinaryFormat/ELFRelocs/PowerPC64.def"
    textual header "BinaryFormat/ELFRelocs/PowerPC.def"
    textual header "BinaryFormat/ELFRelocs/RISCV.def"
    textual header "BinaryFormat/ELFRelocs/Sparc.def"
    textual header "BinaryFormat/ELFRelocs/SystemZ.def"
    textual header "BinaryFormat/ELFRelocs/VE.def"
    textual header "BinaryFormat/ELFRelocs/x86_64.def"
    textual header "BinaryFormat/WasmRelocs.def"
    textual header "BinaryFormat/MsgPack.def"
}

module LLVM_Config {
  requires cplusplus
  umbrella "Config"
  extern module LLVM_Extern_Config_Def "module.extern.modulemap"
  module * { export * }
}

module LLVM_DebugInfo {
  requires cplusplus
  module DIContext { header "DebugInfo/DIContext.h" export * }
}

module LLVM_DebugInfo_DWARF {
  requires cplusplus

  umbrella "DebugInfo/DWARF"
  module * { export * }
}

module LLVM_DebugInfo_PDB {
  requires cplusplus

  umbrella "DebugInfo/PDB"
  module * { export * }

  // Separate out this subdirectory; it's an optional component that depends on
  // a separate library which might not be available.
  //
  // FIXME: There should be a better way to specify this.
  exclude header "DebugInfo/PDB/DIA/DIADataStream.h"
  exclude header "DebugInfo/PDB/DIA/DIAEnumDebugStreams.h"
  exclude header "DebugInfo/PDB/DIA/DIAEnumFrameData.h"
  exclude header "DebugInfo/PDB/DIA/DIAEnumInjectedSources.h"
  exclude header "DebugInfo/PDB/DIA/DIAEnumLineNumbers.h"
  exclude header "DebugInfo/PDB/DIA/DIAEnumSectionContribs.h"
  exclude header "DebugInfo/PDB/DIA/DIAEnumSourceFiles.h"
  exclude header "DebugInfo/PDB/DIA/DIAEnumSymbols.h"
  exclude header "DebugInfo/PDB/DIA/DIAEnumTables.h"
  exclude header "DebugInfo/PDB/DIA/DIAError.h"
  exclude header "DebugInfo/PDB/DIA/DIAFrameData.h"
  exclude header "DebugInfo/PDB/DIA/DIAInjectedSource.h"
  exclude header "DebugInfo/PDB/DIA/DIALineNumber.h"
  exclude header "DebugInfo/PDB/DIA/DIARawSymbol.h"
  exclude header "DebugInfo/PDB/DIA/DIASectionContrib.h"
  exclude header "DebugInfo/PDB/DIA/DIASession.h"
  exclude header "DebugInfo/PDB/DIA/DIASourceFile.h"
  exclude header "DebugInfo/PDB/DIA/DIASupport.h"
  exclude header "DebugInfo/PDB/DIA/DIATable.h"
  exclude header "DebugInfo/PDB/DIA/DIAUtils.h"
}

module LLVM_DebugInfo_PDB_DIA {
  requires cplusplus

  umbrella "DebugInfo/PDB/DIA"
  module * { export * }
}

module LLVM_DebugInfo_MSF {
  requires cplusplus

  umbrella "DebugInfo/MSF"
  module * { export * }
}

module LLVM_DebugInfo_CodeView {
  requires cplusplus

  umbrella "DebugInfo/CodeView"
  module * { export * }

  // These are intended for (repeated) textual inclusion.
  textual header "DebugInfo/CodeView/CodeViewRegisters.def"
  textual header "DebugInfo/CodeView/CodeViewTypes.def"
  textual header "DebugInfo/CodeView/CodeViewSymbols.def"
}

module LLVM_DWARFLinker {
  requires cplusplus

  umbrella "DWARFLinker"
  module * { export * }
}

module LLVM_ExecutionEngine {
  requires cplusplus

  umbrella "ExecutionEngine"
  module * { export * }

  // Exclude this; it's an optional component of the ExecutionEngine.
  exclude header "ExecutionEngine/OProfileWrapper.h"

  // Exclude these; they're intended to be included into only a single
  // translation unit (or none) and aren't part of this module.
  exclude header "ExecutionEngine/MCJIT.h"
  exclude header "ExecutionEngine/Interpreter.h"

  // Exclude headers from LLVM_OrcSupport.
  exclude header "ExecutionEngine/Orc/Shared/OrcError.h"
}

module LLVM_FileCheck {
  requires cplusplus

  umbrella "FileCheck"
  module * { export * }
}

module LLVM_Frontend_OpenMP {
  requires cplusplus

  umbrella "Frontend/OpenMP"
  module * { export * }

  exclude header "Frontend/OpenMP/OMPKinds.def"
}

// Orc utilities that don't depend only on Support (not ExecutionEngine or
// IR). This is a workaround for ExecutionEngine's broken layering, and will
// be removed in the future.
module LLVM_OrcSupport {
  requires cplusplus

  header "ExecutionEngine/Orc/Shared/OrcError.h"

  export *
}

module LLVM_Pass {
  module Pass {
    // PassSupport.h and PassAnalysisSupport.h are made available only through
    // Pass.h.
    header "Pass.h"
    textual header "PassSupport.h"
    textual header "PassAnalysisSupport.h"
    export *
  }

  module PassRegistry { header "PassRegistry.h" export * }
  module InitializePasses { header "InitializePasses.h" export * }
}

module LLVM_intrinsic_gen {
  requires cplusplus

  // Delay building the modules containing dependencies to Attributes.h and
  // Intrinsics.h because they need to be generated by tablegen first.

  // Attributes.h
  module IR_Argument { header "IR/Argument.h" export * }
  module IR_Attributes {
    header "IR/Attributes.h"
    extern module LLVM_Extern_IR_Attributes_Gen "module.extern.modulemap"
    export *
  }
  module IR_AbstractCallSite { header "IR/AbstractCallSite.h" export * }
  module IR_ConstantFolder { header "IR/ConstantFolder.h" export * }
  module IR_GlobalVariable { header "IR/GlobalVariable.h" export * }
  module IR_NoFolder { header "IR/NoFolder.h" export * }
  module IRBuilderFolder { header "IR/IRBuilderFolder.h" export * }
  module IR_Module { header "IR/Module.h" export * }
  module IR_ModuleSummaryIndex { header "IR/ModuleSummaryIndex.h" export * }
  module IR_ModuleSummaryIndexYAML { header "IR/ModuleSummaryIndexYAML.h" export * }
  module IR_Function { header "IR/Function.h" export * }
  module IR_InstrTypes { header "IR/InstrTypes.h" export * }
  module IR_Instructions { header "IR/Instructions.h" export * }
  module IR_TypeFinder { header "IR/TypeFinder.h" export * }


  // Intrinsics.h
  module IR_CFG { header "IR/CFG.h" export * }
  module IR_ConstantRange { header "IR/ConstantRange.h" export * }
  module IR_Dominators { header "IR/Dominators.h" export * }
  module IR_FixedPointBuilder { header "IR/FixedPointBuilder.h" export * }
  module Analysis_PostDominators { header "Analysis/PostDominators.h" export * }
  module Analysis_DomTreeUpdater { header "Analysis/DomTreeUpdater.h" export * }
  module IR_IRBuilder { header "IR/IRBuilder.h" export * }
  module IR_IRPrintingPasses { header "IR/IRPrintingPasses.h" export * }
  module IR_MatrixBuilder { header "IR/MatrixBuilder.h" export * }
  module IR_PassManager { header "IR/PassManager.h" export * }
  module IR_PassManagerImpl { header "IR/PassManagerImpl.h" export * }
  module IR_PredIteratorCache { header "IR/PredIteratorCache.h" export * }
  module IR_Verifier { header "IR/Verifier.h" export * }
  module IR_InstIterator { header "IR/InstIterator.h" export * }
  module IR_InstVisitor { header "IR/InstVisitor.h" export * }
  module IR_Intrinsics {
    header "IR/Intrinsics.h"
    extern module LLVM_Extern_IR_Intricsics_Gen "module.extern.modulemap"
    extern module LLVM_Extern_IR_Intrinsics_Enum "module.extern.modulemap"
    export *
  }
  module IR_IntrinsicInst { header "IR/IntrinsicInst.h" export * }
  module IR_PatternMatch { header "IR/PatternMatch.h" export * }
  module IR_SafepointIRVerifier { header "IR/SafepointIRVerifier.h" export * }
  module IR_Statepoint { header "IR/Statepoint.h" export * }

  export *
}

module LLVM_IR {
  requires cplusplus

  umbrella "IR"
  module * { export * }

  // These are intended for (repeated) textual inclusion.
  textual header "IR/ConstrainedOps.def"
  textual header "IR/DebugInfoFlags.def"
  textual header "IR/Instruction.def"
  textual header "IR/Metadata.def"
  textual header "IR/FixedMetadataKinds.def"
  textual header "IR/Value.def"
  textual header "IR/VPIntrinsics.def"
  textual header "IR/RuntimeLibcalls.def"
}

module LLVM_IRReader {
  requires cplusplus
  umbrella "IRReader"
  module * { export * }
}

module LLVM_LineEditor {
  requires cplusplus
  umbrella "LineEditor"
  module * { export * }
}

module LLVM_LTO {
  requires cplusplus
  umbrella "LTO"
  module * { export * }
}

module LLVM_MC {
  requires cplusplus

  umbrella "MC"
  module * { export * }
}

// Used by llvm-tblgen
module LLVM_MC_TableGen {
  requires cplusplus
  module MC_LaneBitmask { header "MC/LaneBitmask.h" export * }
  module MC_FixedLenDisassembler { header "MC/MCFixedLenDisassembler.h" export * }
  module MC_InstrItineraries { header "MC/MCInstrItineraries.h" export * }
  module MC_Schedule { header "MC/MCSchedule.h" export * }
  module MC_SubtargetFeature { header "MC/SubtargetFeature.h" export * }
}

module LLVM_Object {
  requires cplusplus
  umbrella "Object"
  module * { export * }
}

module LLVM_Option {
  requires cplusplus
  umbrella "Option"
  module * { export * }
}

module LLVM_ProfileData {
  requires cplusplus

  umbrella "ProfileData"
  module * { export * }

  textual header "ProfileData/InstrProfData.inc"
  textual header "ProfileData/MemProfData.inc"
}

// FIXME: Mislayered?
module LLVM_Support_TargetRegistry {
  requires cplusplus
  header "Support/TargetRegistry.h"
  export *
}

module LLVM_TableGen {
  requires cplusplus
  umbrella "TableGen"
  module * { export * }
}

module LLVM_Transforms {
  requires cplusplus
  umbrella "Transforms"

  module * { export * }

  // Requires DEBUG_TYPE to be defined by including file.
  exclude header "Transforms/Utils/InstructionWorklist.h"
}

extern module LLVM_Extern_Utils_DataTypes "module.extern.modulemap"

module LLVM_ADT_AllocatorList {requires cplusplus header "ADT/AllocatorList.h" export *}
module LLVM_ADT_Any {requires cplusplus header "ADT/Any.h" export *}
module LLVM_ADT_APFixedPoint {requires cplusplus header "ADT/APFixedPoint.h" export *}
module LLVM_ADT_APFloat {requires cplusplus header "ADT/APFloat.h" export *}
module LLVM_ADT_APInt {requires cplusplus header "ADT/APInt.h" export *}
module LLVM_ADT_APSInt {requires cplusplus header "ADT/APSInt.h" export *}
module LLVM_ADT_ArrayRef {requires cplusplus header "ADT/ArrayRef.h" export *}
module LLVM_ADT_Bitfields {requires cplusplus header "ADT/Bitfields.h" export *}
module LLVM_ADT_bit {requires cplusplus header "ADT/bit.h" export *}
module LLVM_ADT_BitmaskEnum {requires cplusplus header "ADT/BitmaskEnum.h" export *}
module LLVM_ADT_BitVector {requires cplusplus header "ADT/BitVector.h" export *}
module LLVM_ADT_BreadthFirstIterator {requires cplusplus header "ADT/BreadthFirstIterator.h" export *}
module LLVM_ADT_CachedHashString {requires cplusplus header "ADT/CachedHashString.h" export *}
module LLVM_ADT_CoalescingBitVector {requires cplusplus header "ADT/CoalescingBitVector.h" export *}
module LLVM_ADT_CombinationGenerator {requires cplusplus header "ADT/CombinationGenerator.h" export *}
module LLVM_ADT_DAGDeltaAlgorithm {requires cplusplus header "ADT/DAGDeltaAlgorithm.h" export *}
module LLVM_ADT_DeltaAlgorithm {requires cplusplus header "ADT/DeltaAlgorithm.h" export *}
module LLVM_ADT_DenseMap {requires cplusplus header "ADT/DenseMap.h" export *}
module LLVM_ADT_DenseMapInfo {requires cplusplus header "ADT/DenseMapInfo.h" export *}
module LLVM_ADT_DenseSet {requires cplusplus header "ADT/DenseSet.h" export *}
module LLVM_ADT_DepthFirstIterator {requires cplusplus header "ADT/DepthFirstIterator.h" export *}
module LLVM_ADT_DirectedGraph {requires cplusplus header "ADT/DirectedGraph.h" export *}
module LLVM_ADT_edit_distance {requires cplusplus header "ADT/edit_distance.h" export *}
module LLVM_ADT_EnumeratedArray {requires cplusplus header "ADT/EnumeratedArray.h" export *}
module LLVM_ADT_EpochTracker {requires cplusplus header "ADT/EpochTracker.h" export *}
module LLVM_ADT_EquivalenceClasses {requires cplusplus header "ADT/EquivalenceClasses.h" export *}
module LLVM_ADT_fallible_iterator {requires cplusplus header "ADT/fallible_iterator.h" export *}
module LLVM_ADT_FloatingPointMode {requires cplusplus header "ADT/FloatingPointMode.h" export *}
module LLVM_ADT_FoldingSet {requires cplusplus header "ADT/FoldingSet.h" export *}
module LLVM_ADT_FunctionExtras {requires cplusplus header "ADT/FunctionExtras.h" export *}
module LLVM_ADT_GenericCycleImpl {requires cplusplus header "ADT/GenericCycleImpl.h" export *}
module LLVM_ADT_GenericCycleInfo {requires cplusplus header "ADT/GenericCycleInfo.h" export *}
module LLVM_ADT_GenericSSAContext {requires cplusplus header "ADT/GenericSSAContext.h" export *}
module LLVM_ADT_GraphTraits {requires cplusplus header "ADT/GraphTraits.h" export *}
module LLVM_ADT_Hashing {requires cplusplus header "ADT/Hashing.h" export *}
module LLVM_ADT_identity {requires cplusplus header "ADT/identity.h" export *}
module LLVM_ADT_ilist_base {requires cplusplus header "ADT/ilist_base.h" export *}
module LLVM_ADT_ilist {requires cplusplus header "ADT/ilist.h" export *}
module LLVM_ADT_ilist_iterator {requires cplusplus header "ADT/ilist_iterator.h" export *}
module LLVM_ADT_ilist_node_base {requires cplusplus header "ADT/ilist_node_base.h" export *}
module LLVM_ADT_ilist_node {requires cplusplus header "ADT/ilist_node.h" export *}
module LLVM_ADT_ilist_node_options {requires cplusplus header "ADT/ilist_node_options.h" export *}
module LLVM_ADT_ImmutableList {requires cplusplus header "ADT/ImmutableList.h" export *}
module LLVM_ADT_ImmutableMap {requires cplusplus header "ADT/ImmutableMap.h" export *}
module LLVM_ADT_ImmutableSet {requires cplusplus header "ADT/ImmutableSet.h" export *}
module LLVM_ADT_IndexedMap {requires cplusplus header "ADT/IndexedMap.h" export *}
module LLVM_ADT_IntEqClasses {requires cplusplus header "ADT/IntEqClasses.h" export *}
module LLVM_ADT_IntervalMap {requires cplusplus header "ADT/IntervalMap.h" export *}
module LLVM_ADT_IntrusiveRefCntPtr {requires cplusplus header "ADT/IntrusiveRefCntPtr.h" export *}
module LLVM_ADT_iterator {requires cplusplus header "ADT/iterator.h" export *}
module LLVM_ADT_iterator_range {requires cplusplus header "ADT/iterator_range.h" export *}
module LLVM_ADT_MapVector {requires cplusplus header "ADT/MapVector.h" export *}
module LLVM_ADT_None {requires cplusplus header "ADT/None.h" export *}
module LLVM_ADT_Optional {requires cplusplus header "ADT/Optional.h" export *}
module LLVM_ADT_PackedVector {requires cplusplus header "ADT/PackedVector.h" export *}
module LLVM_ADT_PointerEmbeddedInt {requires cplusplus header "ADT/PointerEmbeddedInt.h" export *}
module LLVM_ADT_PointerIntPair {requires cplusplus header "ADT/PointerIntPair.h" export *}
module LLVM_ADT_PointerSumType {requires cplusplus header "ADT/PointerSumType.h" export *}
module LLVM_ADT_PointerUnion {requires cplusplus header "ADT/PointerUnion.h" export *}
module LLVM_ADT_PostOrderIterator {requires cplusplus header "ADT/PostOrderIterator.h" export *}
module LLVM_ADT_PriorityQueue {requires cplusplus header "ADT/PriorityQueue.h" export *}
module LLVM_ADT_PriorityWorklist {requires cplusplus header "ADT/PriorityWorklist.h" export *}
module LLVM_ADT_SCCIterator {requires cplusplus header "ADT/SCCIterator.h" export *}
module LLVM_ADT_ScopedHashTable {requires cplusplus header "ADT/ScopedHashTable.h" export *}
module LLVM_ADT_ScopeExit {requires cplusplus header "ADT/ScopeExit.h" export *}
module LLVM_ADT_Sequence {requires cplusplus header "ADT/Sequence.h" export *}
module LLVM_ADT_SetOperations {requires cplusplus header "ADT/SetOperations.h" export *}
module LLVM_ADT_SetVector {requires cplusplus header "ADT/SetVector.h" export *}
module LLVM_ADT_simple_ilist {requires cplusplus header "ADT/simple_ilist.h" export *}
module LLVM_ADT_SmallBitVector {requires cplusplus header "ADT/SmallBitVector.h" export *}
module LLVM_ADT_SmallPtrSet {requires cplusplus header "ADT/SmallPtrSet.h" export *}
module LLVM_ADT_SmallSet {requires cplusplus header "ADT/SmallSet.h" export *}
module LLVM_ADT_SmallString {requires cplusplus header "ADT/SmallString.h" export *}
module LLVM_ADT_SmallVector {requires cplusplus header "ADT/SmallVector.h" export *}
module LLVM_ADT_SparseBitVector {requires cplusplus header "ADT/SparseBitVector.h" export *}
module LLVM_ADT_SparseMultiSet {requires cplusplus header "ADT/SparseMultiSet.h" export *}
module LLVM_ADT_SparseSet {requires cplusplus header "ADT/SparseSet.h" export *}
module LLVM_ADT_Statistic {requires cplusplus header "ADT/Statistic.h" export *}
module LLVM_ADT_STLArrayExtras {requires cplusplus header "ADT/STLArrayExtras.h" export *}
module LLVM_ADT_STLExtras {requires cplusplus header "ADT/STLExtras.h" export *}
module LLVM_ADT_STLForwardCompat {requires cplusplus header "ADT/STLForwardCompat.h" export *}
module LLVM_ADT_STLFunctionalExtras {requires cplusplus header "ADT/STLFunctionalExtras.h" export *}
module LLVM_ADT_StringExtras {requires cplusplus header "ADT/StringExtras.h" export *}
module LLVM_ADT_StringMapEntry {requires cplusplus header "ADT/StringMapEntry.h" export *}
module LLVM_ADT_StringMap {requires cplusplus header "ADT/StringMap.h" export *}
module LLVM_ADT_StringRef {requires cplusplus header "ADT/StringRef.h" export *}
module LLVM_ADT_StringSet {requires cplusplus header "ADT/StringSet.h" export *}
module LLVM_ADT_StringSwitch {requires cplusplus header "ADT/StringSwitch.h" export *}
module LLVM_ADT_TinyPtrVector {requires cplusplus header "ADT/TinyPtrVector.h" export *}
module LLVM_ADT_Triple {requires cplusplus header "ADT/Triple.h" export *}
module LLVM_ADT_Twine {requires cplusplus header "ADT/Twine.h" export *}
module LLVM_ADT_TypeSwitch {requires cplusplus header "ADT/TypeSwitch.h" export *}
module LLVM_ADT_UniqueVector {requires cplusplus header "ADT/UniqueVector.h" export *}


module LLVM_Support_AArch64TargetParser {requires cplusplus header "Support/AArch64TargetParser.h" export *}
module LLVM_Support_Alignment {requires cplusplus header "Support/Alignment.h" export *}
module LLVM_Support_AlignOf {requires cplusplus header "Support/AlignOf.h" export *}
module LLVM_Support_AllocatorBase {requires cplusplus header "Support/AllocatorBase.h" export *}
module LLVM_Support_Allocator {requires cplusplus header "Support/Allocator.h" export *}
module LLVM_Support_AMDGPUMetadata {requires cplusplus header "Support/AMDGPUMetadata.h" export *}
module LLVM_Support_AMDHSAKernelDescriptor {requires cplusplus header "Support/AMDHSAKernelDescriptor.h" export *}
module LLVM_Support_ARMAttributeParser {requires cplusplus header "Support/ARMAttributeParser.h" export *}
module LLVM_Support_ARMBuildAttributes {requires cplusplus header "Support/ARMBuildAttributes.h" export *}
module LLVM_Support_ARMEHABI {requires cplusplus header "Support/ARMEHABI.h" export *}
module LLVM_Support_ARMTargetParser {requires cplusplus header "Support/ARMTargetParser.h" export *}
module LLVM_Support_ARMWinEH {requires cplusplus header "Support/ARMWinEH.h" export *}
module LLVM_Support_ArrayRecycler {requires cplusplus header "Support/ArrayRecycler.h" export *}
module LLVM_Support_Atomic {requires cplusplus header "Support/Atomic.h" export *}
module LLVM_Support_AtomicOrdering {requires cplusplus header "Support/AtomicOrdering.h" export *}
module LLVM_Support_AutoConvert {requires cplusplus header "Support/AutoConvert.h" export *}
module LLVM_Support_Automaton {requires cplusplus header "Support/Automaton.h" export *}
module LLVM_Support_Base64 {requires cplusplus header "Support/Base64.h" export *}
module LLVM_Support_BCD {requires cplusplus header "Support/BCD.h" export *}
module LLVM_Support_BinaryByteStream {requires cplusplus header "Support/BinaryByteStream.h" export *}
module LLVM_Support_BinaryItemStream {requires cplusplus header "Support/BinaryItemStream.h" export *}
module LLVM_Support_BinaryStreamArray {requires cplusplus header "Support/BinaryStreamArray.h" export *}
module LLVM_Support_BinaryStreamError {requires cplusplus header "Support/BinaryStreamError.h" export *}
module LLVM_Support_BinaryStream {requires cplusplus header "Support/BinaryStream.h" export *}
module LLVM_Support_BinaryStreamReader {requires cplusplus header "Support/BinaryStreamReader.h" export *}
module LLVM_Support_BinaryStreamRef {requires cplusplus header "Support/BinaryStreamRef.h" export *}
module LLVM_Support_BinaryStreamWriter {requires cplusplus header "Support/BinaryStreamWriter.h" export *}
module LLVM_Support_BlockFrequency {requires cplusplus header "Support/BlockFrequency.h" export *}
module LLVM_Support_BranchProbability {requires cplusplus header "Support/BranchProbability.h" export *}
module LLVM_Support_BuryPointer {requires cplusplus header "Support/BuryPointer.h" export *}
module LLVM_Support_CachePruning {requires cplusplus header "Support/CachePruning.h" export *}
module LLVM_Support_Caching {requires cplusplus header "Support/Caching.h" export *}
module LLVM_Support_Capacity {requires cplusplus header "Support/Capacity.h" export *}
module LLVM_Support_Casting {requires cplusplus header "Support/Casting.h" export *}
module LLVM_Support_CBindingWrapping {requires cplusplus header "Support/CBindingWrapping.h" export *}
module LLVM_Support_CFGDiff {requires cplusplus header "Support/CFGDiff.h" export *}
module LLVM_Support_CFGUpdate {requires cplusplus header "Support/CFGUpdate.h" export *}
module LLVM_Support_CheckedArithmetic {requires cplusplus header "Support/CheckedArithmetic.h" export *}
module LLVM_Support_Chrono {requires cplusplus header "Support/Chrono.h" export *}
module LLVM_Support_circular_raw_ostream {requires cplusplus header "Support/circular_raw_ostream.h" export *}
module LLVM_Support_CodeGenCoverage {requires cplusplus header "Support/CodeGenCoverage.h" export *}
module LLVM_Support_CodeGen {requires cplusplus header "Support/CodeGen.h" export *}
module LLVM_Support_COM {requires cplusplus header "Support/COM.h" export *}
module LLVM_Support_CommandLine {requires cplusplus header "Support/CommandLine.h" export *}
module LLVM_Support_Compiler {requires cplusplus header "Support/Compiler.h" export *}
module LLVM_Support_Compression {requires cplusplus header "Support/Compression.h" export *}
module LLVM_Support_ConvertUTF {requires cplusplus header "Support/ConvertUTF.h" export *}
module LLVM_Support_CrashRecoveryContext {requires cplusplus header "Support/CrashRecoveryContext.h" export *}
module LLVM_Support_CRC {requires cplusplus header "Support/CRC.h" export *}
module LLVM_Support_DataExtractor {requires cplusplus header "Support/DataExtractor.h" export *}
//module LLVM_Support_DataTypes {requires cplusplus header "Support/DataTypes.h" export *}
module LLVM_Support_DebugCounter {requires cplusplus header "Support/DebugCounter.h" export *}
module LLVM_Support_Debug {requires cplusplus header "Support/Debug.h" export *}
module LLVM_Support_Discriminator {requires cplusplus header "Support/Discriminator.h" export *}
module LLVM_Support_DivisionByConstantInfo {requires cplusplus header "Support/DivisionByConstantInfo.h" export *}
module LLVM_Support_DJB {requires cplusplus header "Support/DJB.h" export *}
module LLVM_Support_DOTGraphTraits {requires cplusplus header "Support/DOTGraphTraits.h" export *}
module LLVM_Support_Duration {requires cplusplus header "Support/Duration.h" export *}
module LLVM_Support_DynamicLibrary {requires cplusplus header "Support/DynamicLibrary.h" export *}
module LLVM_Support_ELFAttributeParser {requires cplusplus header "Support/ELFAttributeParser.h" export *}
module LLVM_Support_ELFAttributes {requires cplusplus header "Support/ELFAttributes.h" export *}
module LLVM_Support_Endian {requires cplusplus header "Support/Endian.h" export *}
module LLVM_Support_EndianStream {requires cplusplus header "Support/EndianStream.h" export *}
module LLVM_Support_Errc {requires cplusplus header "Support/Errc.h" export *}
module LLVM_Support_Errno {requires cplusplus header "Support/Errno.h" export *}
module LLVM_Support_Error {requires cplusplus header "Support/Error.h" export *}
module LLVM_Support_ErrorHandling {requires cplusplus header "Support/ErrorHandling.h" export *}
module LLVM_Support_ErrorOr {requires cplusplus header "Support/ErrorOr.h" export *}
module LLVM_Support_ExitCodes {requires cplusplus header "Support/ExitCodes.h" export *}
module LLVM_Support_ExtensibleRTTI {requires cplusplus header "Support/ExtensibleRTTI.h" export *}
module LLVM_Support_FileCollector {requires cplusplus header "Support/FileCollector.h" export *}
module LLVM_Support_FileOutputBuffer {requires cplusplus header "Support/FileOutputBuffer.h" export *}
module LLVM_Support_FileSystem {requires cplusplus header "Support/FileSystem.h" export *}
module LLVM_Support_FileSystem_UniqueID {requires cplusplus header "Support/FileSystem/UniqueID.h" export *}
module LLVM_Support_FileUtilities {requires cplusplus header "Support/FileUtilities.h" export *}
module LLVM_Support_FormatAdapters {requires cplusplus header "Support/FormatAdapters.h" export *}
module LLVM_Support_FormatCommon {requires cplusplus header "Support/FormatCommon.h" export *}
module LLVM_Support_Format {requires cplusplus header "Support/Format.h" export *}
module LLVM_Support_FormatProviders {requires cplusplus header "Support/FormatProviders.h" export *}
module LLVM_Support_FormattedStream {requires cplusplus header "Support/FormattedStream.h" export *}
module LLVM_Support_FormatVariadicDetails {requires cplusplus header "Support/FormatVariadicDetails.h" export *}
module LLVM_Support_FormatVariadic {requires cplusplus header "Support/FormatVariadic.h" export *}
module LLVM_Support_GenericDomTreeConstruction {requires cplusplus header "Support/GenericDomTreeConstruction.h" export *}
module LLVM_Support_GenericDomTree {requires cplusplus header "Support/GenericDomTree.h" export *}
module LLVM_Support_GenericIteratedDominanceFrontier {requires cplusplus header "Support/GenericIteratedDominanceFrontier.h" export *}
module LLVM_Support_GlobPattern {requires cplusplus header "Support/GlobPattern.h" export *}
module LLVM_Support_GraphWriter {requires cplusplus header "Support/GraphWriter.h" export *}
module LLVM_Support_HashBuilder {requires cplusplus header "Support/HashBuilder.h" export *}
module LLVM_Support_Host {requires cplusplus header "Support/Host.h" export *}
module LLVM_Support_InitLLVM {requires cplusplus header "Support/InitLLVM.h" export *}
module LLVM_Support_InstructionCost {requires cplusplus header "Support/InstructionCost.h" export *}
module LLVM_Support_ItaniumManglingCanonicalizer {requires cplusplus header "Support/ItaniumManglingCanonicalizer.h" export *}
module LLVM_Support_JSON {requires cplusplus header "Support/JSON.h" export *}
module LLVM_Support_KnownBits {requires cplusplus header "Support/KnownBits.h" export *}
module LLVM_Support_LEB128 {requires cplusplus header "Support/LEB128.h" export *}
module LLVM_Support_LineIterator {requires cplusplus header "Support/LineIterator.h" export *}
module LLVM_Support_Locale {requires cplusplus header "Support/Locale.h" export *}
module LLVM_Support_LockFileManager {requires cplusplus header "Support/LockFileManager.h" export *}
module LLVM_Support_LowLevelTypeImpl {requires cplusplus header "Support/LowLevelTypeImpl.h" export *}
module LLVM_Support_MachineValueType {requires cplusplus header "Support/MachineValueType.h" export *}
module LLVM_Support_ManagedStatic {requires cplusplus header "Support/ManagedStatic.h" export *}
module LLVM_Support_MathExtras {requires cplusplus header "Support/MathExtras.h" export *}
module LLVM_Support_MD5 {requires cplusplus header "Support/MD5.h" export *}
module LLVM_Support_MemAlloc {requires cplusplus header "Support/MemAlloc.h" export *}
module LLVM_Support_MemoryBuffer {requires cplusplus header "Support/MemoryBuffer.h" export *}
module LLVM_Support_MemoryBufferRef {requires cplusplus header "Support/MemoryBufferRef.h" export *}
module LLVM_Support_Memory {requires cplusplus header "Support/Memory.h" export *}
module LLVM_Support_MipsABIFlags {requires cplusplus header "Support/MipsABIFlags.h" export *}
module LLVM_Support_MSP430AttributeParser {requires cplusplus header "Support/MSP430AttributeParser.h" export *}
module LLVM_Support_MSP430Attributes {requires cplusplus header "Support/MSP430Attributes.h" export *}
module LLVM_Support_MSVCErrorWorkarounds {requires cplusplus header "Support/MSVCErrorWorkarounds.h" export *}
module LLVM_Support_Mutex {requires cplusplus header "Support/Mutex.h" export *}
module LLVM_Support_NativeFormatting {requires cplusplus header "Support/NativeFormatting.h" export *}
module LLVM_Support_OnDiskHashTable {requires cplusplus header "Support/OnDiskHashTable.h" export *}
module LLVM_Support_OptimizedStructLayout {requires cplusplus header "Support/OptimizedStructLayout.h" export *}
module LLVM_Support_Parallel {requires cplusplus header "Support/Parallel.h" export *}
module LLVM_Support_Path {requires cplusplus header "Support/Path.h" export *}
module LLVM_Support_PGOOptions {requires cplusplus header "Support/PGOOptions.h" export *}
module LLVM_Support_PluginLoader {requires cplusplus header "Support/PluginLoader.h" export *}
module LLVM_Support_PointerLikeTypeTraits {requires cplusplus header "Support/PointerLikeTypeTraits.h" export *}
module LLVM_Support_PrettyStackTrace {requires cplusplus header "Support/PrettyStackTrace.h" export *}
module LLVM_Support_Printable {requires cplusplus header "Support/Printable.h" export *}
module LLVM_Support_Process {requires cplusplus header "Support/Process.h" export *}
module LLVM_Support_Program {requires cplusplus header "Support/Program.h" export *}
module LLVM_Support_RandomNumberGenerator {requires cplusplus header "Support/RandomNumberGenerator.h" export *}
module LLVM_Support_raw_os_ostream {requires cplusplus header "Support/raw_os_ostream.h" export *}
module LLVM_Support_raw_ostream {requires cplusplus header "Support/raw_ostream.h" export *}
module LLVM_Support_raw_sha1_ostream {requires cplusplus header "Support/raw_sha1_ostream.h" export *}
module LLVM_Support_Recycler {requires cplusplus header "Support/Recycler.h" export *}
module LLVM_Support_RecyclingAllocator {requires cplusplus header "Support/RecyclingAllocator.h" export *}
module LLVM_Support_Regex {requires cplusplus header "Support/Regex.h" export *}
module LLVM_Support_Registry {requires cplusplus header "Support/Registry.h" export *}
module LLVM_Support_ReverseIteration {requires cplusplus header "Support/ReverseIteration.h" export *}
module LLVM_Support_RISCVAttributeParser {requires cplusplus header "Support/RISCVAttributeParser.h" export *}
module LLVM_Support_RISCVAttributes {requires cplusplus header "Support/RISCVAttributes.h" export *}
module LLVM_Support_RISCVISAInfo {requires cplusplus header "Support/RISCVISAInfo.h" export *}
module LLVM_Support_RWMutex {requires cplusplus header "Support/RWMutex.h" export *}
module LLVM_Support_SaveAndRestore {requires cplusplus header "Support/SaveAndRestore.h" export *}
module LLVM_Support_ScaledNumber {requires cplusplus header "Support/ScaledNumber.h" export *}
module LLVM_Support_ScopedPrinter {requires cplusplus header "Support/ScopedPrinter.h" export *}
module LLVM_Support_SHA1 {requires cplusplus header "Support/SHA1.h" export *}
module LLVM_Support_SHA256 {requires cplusplus header "Support/SHA256.h" export *}
module LLVM_Support_Signals {requires cplusplus header "Support/Signals.h" export *}
module LLVM_Support_Signposts {requires cplusplus header "Support/Signposts.h" export *}
module LLVM_Support_SmallVectorMemoryBuffer {requires cplusplus header "Support/SmallVectorMemoryBuffer.h" export *}
module LLVM_Support_SMLoc {requires cplusplus header "Support/SMLoc.h" export *}
module LLVM_Support_SMTAPI {requires cplusplus header "Support/SMTAPI.h" export *}
module LLVM_Support_Solaris_sys_regset {requires cplusplus header "Support/Solaris/sys/regset.h" export *}
module LLVM_Support_SourceMgr {requires cplusplus header "Support/SourceMgr.h" export *}
module LLVM_Support_SpecialCaseList {requires cplusplus header "Support/SpecialCaseList.h" export *}
module LLVM_Support_StringSaver {requires cplusplus header "Support/StringSaver.h" export *}
module LLVM_Support_SuffixTree {requires cplusplus header "Support/SuffixTree.h" export *}
module LLVM_Support_SwapByteOrder {requires cplusplus header "Support/SwapByteOrder.h" export *}
module LLVM_Support_SymbolRemappingReader {requires cplusplus header "Support/SymbolRemappingReader.h" export *}
module LLVM_Support_SystemUtils {requires cplusplus header "Support/SystemUtils.h" export *}
module LLVM_Support_TargetParser {requires cplusplus header "Support/TargetParser.h" export *}
module LLVM_Support_TargetSelect {requires cplusplus header "Support/TargetSelect.h" export *}
module LLVM_Support_TarWriter {requires cplusplus header "Support/TarWriter.h" export *}
module LLVM_Support_TaskQueue {requires cplusplus header "Support/TaskQueue.h" export *}
module LLVM_Support_thread {requires cplusplus header "Support/thread.h" export *}
module LLVM_Support_Threading {requires cplusplus header "Support/Threading.h" export *}
module LLVM_Support_ThreadLocal {requires cplusplus header "Support/ThreadLocal.h" export *}
module LLVM_Support_ThreadPool {requires cplusplus header "Support/ThreadPool.h" export *}
module LLVM_Support_TimeProfiler {requires cplusplus header "Support/TimeProfiler.h" export *}
module LLVM_Support_Timer {requires cplusplus header "Support/Timer.h" export *}
module LLVM_Support_ToolOutputFile {requires cplusplus header "Support/ToolOutputFile.h" export *}
module LLVM_Support_TrailingObjects {requires cplusplus header "Support/TrailingObjects.h" export *}
module LLVM_Support_TrigramIndex {requires cplusplus header "Support/TrigramIndex.h" export *}
module LLVM_Support_TypeName {requires cplusplus header "Support/TypeName.h" export *}
module LLVM_Support_TypeSize {requires cplusplus header "Support/TypeSize.h" export *}
module LLVM_Support_type_traits {requires cplusplus header "Support/type_traits.h" export *}
module LLVM_Support_UnicodeCharRanges {requires cplusplus header "Support/UnicodeCharRanges.h" export *}
module LLVM_Support_Unicode {requires cplusplus header "Support/Unicode.h" export *}
module LLVM_Support_Valgrind {requires cplusplus header "Support/Valgrind.h" export *}
module LLVM_Support_VersionTuple {requires cplusplus header "Support/VersionTuple.h" export *}
module LLVM_Support_VirtualFileSystem {requires cplusplus header "Support/VirtualFileSystem.h" export *}
module LLVM_Support_Watchdog {requires cplusplus header "Support/Watchdog.h" export *}
module LLVM_Support_Win64EH {requires cplusplus header "Support/Win64EH.h" export *}
module LLVM_Support_WindowsError {requires cplusplus header "Support/WindowsError.h" export *}
module LLVM_Support_Windows_WindowsSupport {requires cplusplus header "Support/Windows/WindowsSupport.h" export *}
module LLVM_Support_WithColor {requires cplusplus header "Support/WithColor.h" export *}
module LLVM_Support_X86DisassemblerDecoderCommon {requires cplusplus header "Support/X86DisassemblerDecoderCommon.h" export *}
module LLVM_Support_X86TargetParser {requires cplusplus header "Support/X86TargetParser.h" export *}
module LLVM_Support_xxhash {requires cplusplus header "Support/xxhash.h" export *}
module LLVM_Support_YAMLParser {requires cplusplus header "Support/YAMLParser.h" export *}
module LLVM_Support_YAMLTraits {requires cplusplus header "Support/YAMLTraits.h" export *}


// A module covering ADT/ and Support/. These are intertwined and
// codependent, and notionally form a single module.
/*
module LLVM_Utils {
  module ADT {
    requires cplusplus

    umbrella "ADT"
    module * { export * }
  }

  module Support {
    requires cplusplus

    umbrella "Support"
    module * { export * }

    // Exclude this; it should only be used on Windows.
    exclude header "Support/Windows/WindowsSupport.h"

    // Exclude these; they are fundamentally non-modular.
    exclude header "Support/PluginLoader.h"
    exclude header "Support/Solaris/sys/regset.h"

    // These are intended for textual inclusion.
    textual header "Support/AArch64TargetParser.def"
    textual header "Support/ARMTargetParser.def"
    textual header "Support/RISCVTargetParser.def"
    textual header "Support/TargetOpcodes.def"
    textual header "Support/X86TargetParser.def"
  }

  // This part of the module is usable from both C and C++ code.
  module ConvertUTF {
    header "Support/ConvertUTF.h"
    export *
  }
}
*/

// This is used for a $src == $build compilation. Otherwise we use
// LLVM_Support_DataTypes_Build, defined in a module map that is
// copied into the build area.
module LLVM_Support_DataTypes_Src {
  header "llvm/Support/DataTypes.h"
  export *
}

module LLVM_WindowsManifest {
  requires cplusplus
  umbrella "WindowsManifest"
  module * { export * }
}
